name: Build, Push and Deploy Docker Image

on:
  push:
    branches:
      - main # ใช้สำหรับสาขาที่ต้องการ trigger workflow เช่น main
      - backup

jobs:
  # Job สำหรับการ Build และ Push Docker Image ไปยัง Docker Hub
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_REPOSITORY }}:latest .

      - name: Push Docker Image to Docker Hub
        run: |
          docker push ${{ secrets.DOCKER_REPOSITORY }}:latest

  # Job สำหรับการ Deploy ไปยัง EC2
  deploy:
    runs-on: dailyfixbackend
    needs: build # จะรันหลังจาก build job เสร็จ
    if: github.ref == 'refs/heads/main'
    env:
      MONGODB_URI: ${{ secrets.MONGODB_URI }}
      PORT: ${{ secrets.PORT }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set environment variables for Docker Compose
        run: |
          echo "MONGODB_URI=${{ secrets.MONGODB_URI }}" >> .env
          echo "PORT=${{ secrets.PORT }}" >> .env

      - name: Build and deploy Docker containers
        run: |

          # down Docker container บน EC2
          docker-compose down
          # Pull Docker Image จาก Docker Hub
          docker-compose pull
          # รัน Docker container บน EC2
          docker-compose up -d

      - name: Remove none cache # remove cache build docker
        run: |
          docker rmi $(docker images --filter "dangling=true" --quiet --no-trunc) || true # Ignore if the process doesn't exist

  # Job สำหรับการ Deploy ไปยัง EC2
  backup:
    runs-on: dailyfixbackendbackup
    needs: build # จะรันหลังจาก build job เสร็จ
    if: github.ref == 'refs/heads/backup'
    env:
      MONGODB_URI: ${{ secrets.MONGODB_URI }}
      PORT: ${{ secrets.PORT }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set environment variables for Docker Compose
        run: |
          echo "MONGODB_URI=${{ secrets.MONGODB_URI }}" >> .env
          echo "PORT=${{ secrets.PORT }}" >> .env

      - name: Build and deploy Docker containers
        run: |

          # down Docker container บน EC2
          docker-compose down
          # Pull Docker Image จาก Docker Hub
          docker-compose pull
          # รัน Docker container บน EC2
          docker-compose up -d

      - name: Remove none cache # remove cache build docker
        run: |
          docker rmi $(docker images --filter "dangling=true" --quiet --no-trunc) || true # Ignore if the process doesn't exist
